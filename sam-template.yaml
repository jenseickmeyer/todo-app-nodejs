AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
    Simple implementation of a REST API for an imaginary todo app.

Globals:
  Function:
    Runtime: nodejs12.x
    Timeout: 60
    Tags:
      stage:
        Ref: StageName
  Api:
    OpenApiVersion: '3.0.1'

Parameters:
  S3BucketName:
    Type: String
    Description: The name of the S3 bucket in which the Swagger specification can be found.
  StageName:
    Type: String
    Default: dev
    Description: The Lambda Function Stage

Resources:

  RestApi:
    Type: AWS::Serverless::Api
    Properties:
      Name:
        Fn::Sub: todo-app-api-${StageName}
      StageName:
        Ref: StageName
      DefinitionBody:
          Fn::Transform:
            Name: AWS::Include
            Parameters:
              Location:
                Fn::Join:
                  - ''
                  - - 's3://'
                    - Ref: S3BucketName
                    - '/swagger.yaml'

  ListTasksFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: todo-app-${StageName}-list-tasks
      CodeUri: src/
      Handler: index.listTasks
      Policies:
        DynamoDBReadPolicy:
          TableName:
            Ref: TasksTable
      Environment:
        Variables:
          TABLE_NAME:
            Ref: TasksTable
      Events:
        Get:
          Type: Api
          Properties:
            RestApiId:
              Ref: RestApi
            Path: /
            Method: GET

  CreateTaskFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: todo-app-${StageName}-create-task
      CodeUri: src/
      Handler: index.createTask
      Policies:
        DynamoDBCrudPolicy:
          TableName:
            Ref: TasksTable
      Environment:
        Variables:
          TABLE_NAME:
            Ref: TasksTable
      Events:
        Post:
          Type: Api
          Properties:
            RestApiId:
              Ref: RestApi
            Path: /
            Method: POST

  GetTaskFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: todo-app-${StageName}-get-task
      CodeUri: src/
      Handler: index.getTask
      Policies:
        DynamoDBReadPolicy:
          TableName:
            Ref: TasksTable
      Environment:
        Variables:
          TABLE_NAME:
            Ref: TasksTable
      Events:
        Get:
          Type: Api
          Properties:
            RestApiId:
              Ref: RestApi
            Path: /{id}
            Method: GET

  UpdateTaskFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: todo-app-${StageName}-update-task
      CodeUri: src/
      Handler: index.updateTask
      Policies:
        DynamoDBCrudPolicy:
          TableName:
            Ref: TasksTable
      Environment:
        Variables:
          TABLE_NAME:
            Ref: TasksTable
      Events:
        Get:
          Type: Api
          Properties:
            RestApiId:
              Ref: RestApi
            Path: /{id}
            Method: PUT

  DeleteTaskFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: todo-app-${StageName}-delete-task
      CodeUri: src/
      Handler: index.deleteTask
      Policies:
        DynamoDBCrudPolicy:
          TableName:
            Ref: TasksTable
      Environment:
        Variables:
          TABLE_NAME:
            Ref: TasksTable
      Events:
        Get:
          Type: Api
          Properties:
            RestApiId:
              Ref: RestApi
            Path: /{id}
            Method: DELETE

  TasksTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName:
        Fn::Sub: todo-app-${StageName}-tasks
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      Tags:
        stage:
          Ref: StageName

Outputs:
  ApiUrl:
    Value:
      Fn::Join:
        - ""
        - - "https://"
          - Ref: RestApi
          - Fn::Sub: ".execute-api.${AWS::Region}.amazonaws.com/dev"
